---
Name: "dr-server-seed"
Description: "Setup Files for Digital Rebar Server"
Documentation: |
  Copy Files from Multi-Site-Manager to Local DR Server
Templates:
  - Contents: |-
      #!/bin/bash
      # RackN Copyright 2020

      set -e
      # DO NOT INCLUDE template "setup.tmpl" !!

      {{ $addr := .Machine.Address -}}

      export RS_KEY="rocketskates:r0cketsk8ts"
      export RS_ENDPOINT="https://{{$addr}}:8092"
      unset RS_TOKEN
      unset RS_LOCAL_PROXY

      echo "Pointing DRPCLI to $RS_ENDPOINT using $RS_KEY"

      drpcli -x profiles show global

      echo "copy over Linode Token (value NOT shown)"
      drpcli -x profiles set global set "linode/token" to "{{ .Param "linode/token" }}" >/dev/null

      echo "copy over Linode Region to {{ .Param "linode/region" }}"
      drpcli -x profiles set global set "linode/region" to "{{ .Param "linode/region" }}" >/dev/null

      echo "copy over Prefix to {{ .Param "demo/cluster-prefix" }}"
      drpcli -x profiles set global set "demo/cluster-prefix" to "{{ .Param "demo/cluster-prefix" }}" >/dev/null

      echo "Populate the contexts"
      contexts=$(jq -r ".[].Name" <<< "${raw}")
      i=0
      for context in $contexts; do
        image=$(jq -r ".[$i].Image" <<< "${raw}")
        echo "Installing Container for $context named from $image"
        drpcli -x plugins runaction docker-context imageUpload \
          context/image-name ${image} \
          context/image-path files/contexts/docker-context/${image}
        i=$(($i + 1))
      done

      exit 0
    Name: "drp-install"
Meta:
  icon: "heart"
  color: "green"
  title: "RackN Content"
  feature-flags: "sane-exit-codes"
